import tkinter as tk
from tkinter import filedialog, messagebox, ttk
import pandas as pd
import csv



root = tk.Tk()

root.geometry("500x500")
root.title("CSV-EDIT")
root.pack_propagate(False)
root.resizable(0, 0)



frame1 = tk.LabelFrame(root, text="Excel Data")
frame1.place(height=250, width=500)

file_frame = tk.LabelFrame(root, text="Open File")
file_frame.place(height=100, width=400, rely=0.65, relx=.1)

button1 = tk.Button(file_frame, text="Select A File", command=lambda: File_dialog())
button1.place(rely=0.65, relx=0.50)

button2 = tk.Button(file_frame, text="Load File", command=lambda: Load_excel_data())
button2.place(rely=0.65, relx=0.30)

button3 = tk.Button(root,text="Add", command=lambda: add_word())
button3.place(rely=0.60, relx=0.10)


label_file = ttk.Label(file_frame, text="No File Selected")
label_file.place(rely=0, relx=0)

word_entry = tk.Label(root,text="Enter Word:")
word_entry.place(rely=0.50, relx=0.10)
word_entry = tk.Entry(root)
word_entry.place(rely=0.55, relx=0.10)

definition_entry = tk.Label(root,text="Enter Definition:")
definition_entry.place(rely=0.50, relx=0.40)
definition_entry = tk.Entry(root)
definition_entry.place(rely=0.55, relx=0.40)




tv1 = ttk.Treeview(frame1)
tv1.place(relheight=1, relwidth=1)

treescrolly = tk.Scrollbar(frame1, orient="vertical", command=tv1.yview)
treescrollx = tk.Scrollbar(frame1, orient="horizontal", command=tv1.xview)
tv1.configure(xscrollcommand=treescrollx.set, yscrollcommand=treescrolly.set)
treescrolly.pack(side="right", fill="y")








def File_dialog():
   filename = filedialog.askopenfilename(initialdir="/",
                                         title="Select A File",
                                         filetype=(("All Files", "*.*"),("All Files", "*.*")))
   label_file["text"] = filename
   gg.delete(0, tk.END)
   gg.insert(0, filename)
   return None


def Load_excel_data():
   file_path = label_file["text"]
   try:
       excel_filename = r"{}".format(file_path)
       if excel_filename[-4:] == ".csv":
           df = pd.read_csv(excel_filename)
       else:
           df = pd.read_excel(excel_filename)

   except ValueError:
       tk.messagebox.showerror("Information", "The file you have chosen is invalid")
       return None
   except FileNotFoundError:
       tk.messagebox.showerror("Information", f"No such file as {file_path}")
       return None

   clear_data()
   tv1["column"] = list(df.columns)
   tv1["show"] = "headings"
   for column in tv1["columns"]:
       tv1.heading(column, text=column)

   df_rows = df.to_numpy().tolist()
   for row in df_rows:
       tv1.insert("", "end", values=row)
   return None


def clear_data():
   tv1.delete(*tv1.get_children())
   return None


gg = tk.Entry(root, width=0)
gg.place(x=9, y=900)



def add_word():
   file_path = gg.get()
   if file_path == "":
       messagebox.showerror("Error", "Please select csv a file.")
       return
   new_word = word_entry.get()
   new_definition = definition_entry.get()
   if new_definition == "":
       messagebox.showerror("Error", "Please enter a word&definition.")
       return
   elif new_definition == "":
       messagebox.showerror("Error", "Please enter a word&definition.")
       return
   with open(file_path, 'a', newline='') as csvfile:
       fieldnames = ['Words:', 'Definition']
       writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
       writer.writerow({'Words:': new_word, 'Definition': new_definition})
   messagebox.showinfo("Word Added", "The word has been added to the file.")
   word_entry.delete(0, tk.END)
   definition_entry.delete(0, tk.END)


root.mainloop()
